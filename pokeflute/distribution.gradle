buildProperties {
    localProperties {
        file project.file("local.properties")
    }
}

/*
 *  Gets the version name from the latest Git tag
 */
def getVersionName = {
    def stdout = new ByteArrayOutputStream()
    try {
        exec {
            commandLine 'git', 'describe', '--tags', '--abbrev=0'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
    catch (e) {
        println("Can't get version from git: " + e)
        return "adhoc"
    }
}
allprojects {
    version = "${getVersionName()}"
}

/*
 *  Performs clean, build, maven install and publish on Bintray
 */
task cleanBuildInstallPublish {
    dependsOn 'clean'
    dependsOn 'build'
    dependsOn 'install'
    dependsOn 'bintrayUpload'
    tasks.findByName('build').mustRunAfter 'clean'
    tasks.findByName('install').mustRunAfter 'build'
    tasks.findByName('bintrayUpload').mustRunAfter 'install'
}
configure(cleanBuildInstallPublish) {
    group = 'Publishing'
    description = 'Cleans, builds, creates artifact and uploads to bintray'
}

/*
 *  Upload to Bintray
 */
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
artifacts {
    archives sourcesJar
}

group = 'it.near.sdk'

bintray {
    user = (buildProperties.localProperties['bintray.user'] | buildProperties.env['BINTRAY_USER']).string
    key = (buildProperties.localProperties['bintray.apikey'] | buildProperties.env['BINTRAY_APIKEY']).string
    configurations = ['archives']

    pkg {
        repo = 'NearIT-Android-SDK'
        name = 'it.near.sdk:pokeflute'
        vcsUrl = 'https://github.com/nearit/androidPokeFlute'
        websiteUrl = 'https://nearit.com'
        userOrg = 'nearit'
        licenses = ['MIT']
        publish = true
    }
}